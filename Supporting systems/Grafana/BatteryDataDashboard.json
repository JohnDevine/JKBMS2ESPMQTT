{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "description": "Data from the batteries",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 6,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "eerly85rktxq8d"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "max": 14.6,
          "min": 12,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-red"
              },
              {
                "color": "dark-green",
                "value": 12.8
              },
              {
                "color": "#EAB839",
                "value": 13.3
              }
            ]
          },
          "unit": "volt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 0,
        "y": 0
      },
      "id": 7,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": true,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "12.0.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "from(bucket: \"BMS\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"packV\" and\n    r.packName == \"${Battery_pack_01}\"\n  )\n  |> last()\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"${Battery_pack_01}\"\n  }))",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "from(bucket: \"BMS\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"packV\" and\n    r.packName == \"${Battery_pack_02}\"\n  )\n  |> last()\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"${Battery_pack_02}\"\n  }))",
          "refId": "B"
        }
      ],
      "title": "Pack Current Volts",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "eerly85rktxq8d"
      },
      "description": "The voltage of the complete pack. A pack consists of a number of cells",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line+area"
            }
          },
          "decimals": 3,
          "mappings": [],
          "noValue": "No Data",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red"
              },
              {
                "color": "green",
                "value": 12
              },
              {
                "color": "#EAB839",
                "value": 13.4
              },
              {
                "color": "red",
                "value": 13.6
              }
            ]
          },
          "unit": "volt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 18,
        "x": 6,
        "y": 0
      },
      "id": 1,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "range",
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "// === COMPLETE QUERY FOR PACK VOLTAGE HISTORY - Query A (Battery Pack 01) ===\n// Copy this entire block into your Grafana panel Query A\n\n// Calculate time range duration in seconds (simpler approach)\ntimeRangeDuration = uint(v: v.timeRangeStop) - uint(v: v.timeRangeStart)\n\nbucketName = if timeRangeDuration <= 21600000000000 then \"BMS\"              // ≤ 6 hours: raw 5s data\n             else if timeRangeDuration <= 172800000000000 then \"BMS_30s\"    // ≤ 2 days: 30s aggregates\n             else if timeRangeDuration <= 1209600000000000 then \"BMS_5m\"    // ≤ 2 weeks: 5m aggregates\n             else \"BMS_1h\"                                                   // > 2 weeks: 1h aggregates\n\nfrom(bucket: bucketName)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"packV\" and\n    r.packName == \"${Battery_pack_01}\"\n  )\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"${Battery_pack_01}\"\n  }))\n",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "// === COMPLETE QUERY FOR PACK VOLTAGE HISTORY - Query B (Battery Pack 02) ===\n// Copy this entire block into your Grafana panel Query B\n\n// Calculate time range duration in seconds (simpler approach)\ntimeRangeDuration = uint(v: v.timeRangeStop) - uint(v: v.timeRangeStart)\n\nbucketName = if timeRangeDuration <= 21600000000000 then \"BMS\"              // ≤ 6 hours: raw 5s data\n             else if timeRangeDuration <= 172800000000000 then \"BMS_30s\"    // ≤ 2 days: 30s aggregates\n             else if timeRangeDuration <= 1209600000000000 then \"BMS_5m\"    // ≤ 2 weeks: 5m aggregates\n             else \"BMS_1h\"                                                   // > 2 weeks: 1h aggregates\n\nfrom(bucket: bucketName)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"packV\" and\n    r.packName == \"${Battery_pack_02}\"\n  )\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"${Battery_pack_02}\"\n  }))\n",
          "refId": "B"
        }
      ],
      "title": "Pack history Voltage",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "eerly85rktxq8d"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "max": 100,
          "min": -100,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": -100
              },
              {
                "color": "#EAB839",
                "value": -50
              },
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "red",
                "value": 60
              },
              {
                "color": "dark-red",
                "value": 100
              }
            ]
          },
          "unit": "amp"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 0,
        "y": 8
      },
      "id": 3,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": true,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "12.0.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "from(bucket: \"BMS\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"packA\" and\n    r.packName == \"${Battery_pack_01}\"\n  )\n  |> last()\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"${Battery_pack_01}\"\n  }))",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "from(bucket: \"BMS\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"packA\" and\n    r.packName == \"${Battery_pack_02}\"\n  )\n  |> last()\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"${Battery_pack_02}\"\n  }))",
          "refId": "B"
        }
      ],
      "title": "Pack Current Amps",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "eerly85rktxq8d"
      },
      "description": "The amperage of the complete pack. A pack consists of a number of cells",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": true,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line+area"
            }
          },
          "decimals": 2,
          "fieldMinMax": false,
          "mappings": [],
          "noValue": "No Data",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "dark-red",
                "value": -100
              },
              {
                "color": "orange",
                "value": -70
              },
              {
                "color": "green",
                "value": -50
              },
              {
                "color": "green",
                "value": 0
              },
              {
                "color": "yellow",
                "value": 50
              },
              {
                "color": "dark-orange",
                "value": 70
              },
              {
                "color": "dark-red",
                "value": 100
              }
            ]
          },
          "unit": "amp"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 18,
        "x": 6,
        "y": 8
      },
      "id": 4,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "// === COMPLETE QUERY FOR PACK CURRENT HISTORY - Query A (Battery Pack 01) ===\n// Copy this entire block into your Grafana panel Query A\n\n// Calculate time range duration in seconds (simpler approach)\ntimeRangeDuration = uint(v: v.timeRangeStop) - uint(v: v.timeRangeStart)\n\nbucketName = if timeRangeDuration <= 21600000000000 then \"BMS\"              // ≤ 6 hours: raw 5s data\n             else if timeRangeDuration <= 172800000000000 then \"BMS_30s\"    // ≤ 2 days: 30s aggregates\n             else if timeRangeDuration <= 1209600000000000 then \"BMS_5m\"    // ≤ 2 weeks: 5m aggregates\n             else \"BMS_1h\"                                                   // > 2 weeks: 1h aggregates\n\nfrom(bucket: bucketName)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"packA\" and\n    r.packName == \"${Battery_pack_01}\"\n  )\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"${Battery_pack_01}\"\n  }))\n",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "// === COMPLETE QUERY FOR PACK CURRENT HISTORY - Query B (Battery Pack 02) ===\n// Copy this entire block into your Grafana panel Query B\n\n// Calculate time range duration in seconds (simpler approach)\ntimeRangeDuration = uint(v: v.timeRangeStop) - uint(v: v.timeRangeStart)\n\nbucketName = if timeRangeDuration <= 21600000000000 then \"BMS\"              // ≤ 6 hours: raw 5s data\n             else if timeRangeDuration <= 172800000000000 then \"BMS_30s\"    // ≤ 2 days: 30s aggregates\n             else if timeRangeDuration <= 1209600000000000 then \"BMS_5m\"    // ≤ 2 weeks: 5m aggregates\n             else \"BMS_1h\"                                                   // > 2 weeks: 1h aggregates\n\nfrom(bucket: bucketName)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"packA\" and\n    r.packName == \"${Battery_pack_02}\"\n  )\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"${Battery_pack_02}\"\n  }))\n",
          "refId": "B"
        }
      ],
      "title": "Pack History Amps",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "eerly85rktxq8d"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-red"
              },
              {
                "color": "super-light-green",
                "value": 15
              },
              {
                "color": "dark-green",
                "value": 85
              },
              {
                "color": "#EAB839",
                "value": 95
              },
              {
                "color": "dark-red",
                "value": 100
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 6,
        "x": 0,
        "y": 16
      },
      "id": 8,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": true,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "12.0.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "from(bucket: \"BMS\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"packSOC\" and\n    r.packName == \"${Battery_pack_01}\"\n  )\n  |> last()\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"${Battery_pack_01}\"\n  }))",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "from(bucket: \"BMS\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"packSOC\" and\n    r.packName == \"${Battery_pack_02}\"\n  )\n  |> last()\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"${Battery_pack_02}\"\n  }))",
          "refId": "B"
        }
      ],
      "title": "Pack Current SOC",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "eerly85rktxq8d"
      },
      "description": "The state of charge history of the complete battery pack. Note that a battery pack consists of a number of cells",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": true,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 100,
            "axisSoftMin": 0,
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 1,
          "fieldMinMax": false,
          "mappings": [],
          "noValue": "No Data",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-red"
              },
              {
                "color": "super-light-green",
                "value": 15
              },
              {
                "color": "dark-green",
                "value": 80
              },
              {
                "color": "dark-orange",
                "value": 95
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 18,
        "x": 6,
        "y": 16
      },
      "id": 5,
      "options": {
        "legend": {
          "calcs": [
            "last"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "// === COMPLETE QUERY FOR PACK SOC HISTORY - Query A (Battery Pack 01) ===\n// Copy this entire block into your Grafana panel Query A\n\n// Calculate time range duration in seconds (simpler approach)\ntimeRangeDuration = uint(v: v.timeRangeStop) - uint(v: v.timeRangeStart)\n\nbucketName = if timeRangeDuration <= 21600000000000 then \"BMS\"              // ≤ 6 hours: raw 5s data\n             else if timeRangeDuration <= 172800000000000 then \"BMS_30s\"    // ≤ 2 days: 30s aggregates\n             else if timeRangeDuration <= 1209600000000000 then \"BMS_5m\"    // ≤ 2 weeks: 5m aggregates\n             else \"BMS_1h\"                                                   // > 2 weeks: 1h aggregates\n\nfrom(bucket: bucketName)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"packSOC\" and\n    r.packName == \"${Battery_pack_01}\"\n  )\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"${Battery_pack_01}\"\n  }))\n",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "// === COMPLETE QUERY FOR PACK SOC HISTORY - Query B (Battery Pack 02) ===\n// Copy this entire block into your Grafana panel Query B\n\n// Calculate time range duration in seconds (simpler approach)\ntimeRangeDuration = uint(v: v.timeRangeStop) - uint(v: v.timeRangeStart)\n\nbucketName = if timeRangeDuration <= 21600000000000 then \"BMS\"              // ≤ 6 hours: raw 5s data\n             else if timeRangeDuration <= 172800000000000 then \"BMS_30s\"    // ≤ 2 days: 30s aggregates\n             else if timeRangeDuration <= 1209600000000000 then \"BMS_5m\"    // ≤ 2 weeks: 5m aggregates\n             else \"BMS_1h\"                                                   // > 2 weeks: 1h aggregates\n\nfrom(bucket: bucketName)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"packSOC\" and\n    r.packName == \"${Battery_pack_02}\"\n  )\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"${Battery_pack_02}\"\n  }))\n",
          "refId": "B"
        }
      ],
      "title": "Pack history of State Of Charge.",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "eerly85rktxq8d"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 3,
          "mappings": [],
          "max": 3.7,
          "min": 2.5,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-red"
              },
              {
                "color": "dark-green",
                "value": 3.1
              },
              {
                "color": "#EAB839",
                "value": 3.55
              },
              {
                "color": "red",
                "value": 3.65
              }
            ]
          },
          "unit": "volt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 0,
        "y": 23
      },
      "id": 11,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": true,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "12.0.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "from(bucket: \"BMS\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"cell0V\" and\n    r.packName == \"${Battery_pack_01}\"\n  )\n  |> last()\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"Cell 1\"\n  }))",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "from(bucket: \"BMS\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"cell1V\" and\n    r.packName == \"${Battery_pack_01}\"\n  )\n  |> last()\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"Cell 2\"\n  }))",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "from(bucket: \"BMS\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"cell2V\" and\n    r.packName == \"${Battery_pack_01}\"\n  )\n  |> last()\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"Cell 3\"\n  }))",
          "refId": "C"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "from(bucket: \"BMS\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"cell3V\" and\n    r.packName == \"${Battery_pack_01}\"\n  )\n  |> last()\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"Cell 4\"\n  }))",
          "refId": "D"
        }
      ],
      "title": "${Battery_pack_01}",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "eerly85rktxq8d"
      },
      "description": "This is the history of the individual cells voltages over time.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line+area"
            }
          },
          "decimals": 3,
          "mappings": [],
          "noValue": "No Data",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-red"
              },
              {
                "color": "orange",
                "value": 3
              },
              {
                "color": "green",
                "value": 3.2
              },
              {
                "color": "#EAB839",
                "value": 3.4
              },
              {
                "color": "red",
                "value": 3.65
              }
            ]
          },
          "unit": "volt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 18,
        "x": 6,
        "y": 23
      },
      "id": 9,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "range",
            "last"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "// === COMPLETE QUERY FOR INDIVIDUAL CELL VOLTAGES - Query A (Battery Pack 01) ===\n// Copy this entire block into your Grafana panel Query A\n\n// Calculate time range duration in seconds (simpler approach)\ntimeRangeDuration = uint(v: v.timeRangeStop) - uint(v: v.timeRangeStart)\n\nbucketName = if timeRangeDuration <= 21600000000000 then \"BMS\"              // ≤ 6 hours: raw 5s data\n             else if timeRangeDuration <= 172800000000000 then \"BMS_30s\"    // ≤ 2 days: 30s aggregates\n             else if timeRangeDuration <= 1209600000000000 then \"BMS_5m\"    // ≤ 2 weeks: 5m aggregates\n             else \"BMS_1h\"                                                   // > 2 weeks: 1h aggregates\n\nfrom(bucket: bucketName)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r.packName == \"${Battery_pack_01}\" and\n    (r._field == \"cell0V\" or r._field == \"cell1V\" or r._field == \"cell2V\" or r._field == \"cell3V\" or\n     r._field == \"cell4V\" or r._field == \"cell5V\" or r._field == \"cell6V\" or r._field == \"cell7V\" or\n     r._field == \"cell8V\" or r._field == \"cell9V\" or r._field == \"cell10V\" or r._field == \"cell11V\" or\n     r._field == \"cell12V\" or r._field == \"cell13V\" or r._field == \"cell14V\" or r._field == \"cell15V\")\n  )\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"${Battery_pack_01}_\" + r._field\n  }))\n",
          "refId": "A"
        }
      ],
      "title": "${Battery_pack_01} (Individual Cells)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "eerly85rktxq8d"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 3,
          "mappings": [],
          "max": 3.7,
          "min": 2.5,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-red"
              },
              {
                "color": "dark-green",
                "value": 3.1
              },
              {
                "color": "#EAB839",
                "value": 3.55
              },
              {
                "color": "red",
                "value": 3.65
              }
            ]
          },
          "unit": "volt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 6,
        "x": 0,
        "y": 31
      },
      "id": 12,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": true,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "12.0.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "from(bucket: \"BMS\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"cell0V\" and\n    r.packName == \"${Battery_pack_02}\"\n  )\n  |> last()\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"Cell 1\"\n  }))",
          "refId": "A"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "from(bucket: \"BMS\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"cell1V\" and\n    r.packName == \"${Battery_pack_02}\"\n  )\n  |> last()\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"Cell 2\"\n  }))",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "from(bucket: \"BMS\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"cell2V\" and\n    r.packName == \"${Battery_pack_02}\"\n  )\n  |> last()\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"Cell 3\"\n  }))",
          "refId": "C"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "from(bucket: \"BMS\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r._field == \"cell3V\" and\n    r.packName == \"${Battery_pack_02}\"\n  )\n  |> last()\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"Cell 4\"\n  }))",
          "refId": "D"
        }
      ],
      "title": "${Battery_pack_02}",
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "eerly85rktxq8d"
      },
      "description": "This is the history of the individual cells voltages over time.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": true,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line+area"
            }
          },
          "decimals": 3,
          "mappings": [],
          "noValue": "No Data",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red"
              },
              {
                "color": "yellow",
                "value": 3
              },
              {
                "color": "green",
                "value": 3.2
              },
              {
                "color": "orange",
                "value": 3.4
              },
              {
                "color": "red",
                "value": 3.65
              }
            ]
          },
          "unit": "volt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 18,
        "x": 6,
        "y": 31
      },
      "id": 10,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "range",
            "last"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eerly85rktxq8d"
          },
          "hide": false,
          "query": "// === COMPLETE QUERY FOR INDIVIDUAL CELL VOLTAGES - Query B (Battery Pack 02) ===\n// Copy this entire block into your Grafana panel Query B\n\n// Calculate time range duration in seconds (simpler approach)\ntimeRangeDuration = uint(v: v.timeRangeStop) - uint(v: v.timeRangeStart)\n\nbucketName = if timeRangeDuration <= 21600000000000 then \"BMS\"              // ≤ 6 hours: raw 5s data\n             else if timeRangeDuration <= 172800000000000 then \"BMS_30s\"    // ≤ 2 days: 30s aggregates\n             else if timeRangeDuration <= 1209600000000000 then \"BMS_5m\"    // ≤ 2 weeks: 5m aggregates\n             else \"BMS_1h\"                                                   // > 2 weeks: 1h aggregates\n\nfrom(bucket: bucketName)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) =>\n    r._measurement == \"battery\" and\n    r.packName == \"${Battery_pack_02}\" and\n    (r._field == \"cell0V\" or r._field == \"cell1V\" or r._field == \"cell2V\" or r._field == \"cell3V\" or\n     r._field == \"cell4V\" or r._field == \"cell5V\" or r._field == \"cell6V\" or r._field == \"cell7V\" or\n     r._field == \"cell8V\" or r._field == \"cell9V\" or r._field == \"cell10V\" or r._field == \"cell11V\" or\n     r._field == \"cell12V\" or r._field == \"cell13V\" or r._field == \"cell14V\" or r._field == \"cell15V\")\n  )\n  |> map(fn: (r) => ({\n    _time: r._time,\n    _value: r._value,\n    _field: \"${Battery_pack_02}_\" + r._field\n  }))\n",
          "refId": "A"
        }
      ],
      "title": "${Battery_pack_02} (Individual Cells)",
      "type": "timeseries"
    }
  ],
  "preload": false,
  "schemaVersion": 41,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "text": "SB-12-1",
          "value": "SB-12-1"
        },
        "definition": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"BMS\",\n  tag: \"packName\"\n  )",
        "description": "The first battery pack to display",
        "label": "First pack",
        "name": "Battery_pack_01",
        "options": [],
        "query": {
          "query": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"BMS\",\n  tag: \"packName\"\n  )"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "SB-12-1",
          "value": "SB-12-1"
        },
        "definition": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"BMS\",\n  tag: \"packName\"\n)",
        "description": "The second battery pack to display",
        "label": "Second pack",
        "name": "Battery_pack_02",
        "options": [],
        "query": {
          "query": "import \"influxdata/influxdb/schema\"\n\nschema.tagValues(\n  bucket: \"BMS\",\n  tag: \"packName\"\n)"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-5m",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Battery data",
  "uid": "83afb816-308f-453f-bf19-3f785bc466b3",
  "version": 126
}